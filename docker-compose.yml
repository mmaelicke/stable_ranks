services:

  db:
    image: postgis/postgis:15-3.4
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: metacatalog
    expose:
      - 5432
    ports:
      - 5445:5432
    volumes:
      - ./data/pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'"]
      interval: 30s
      timeout: 1s
      retries: 5
      start_period: 30s
      start_interval: 1s
  
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_SERVERS_JSON: |
        {
          "Servers": {
            "1": {
              "Name": "Metacatalog DB",
              "Group": "Servers",
              "Host": "db",
              "Port": 5432,
              "MaintenanceDB": "postgres",
              "Username": "postgres",
              "Password": "postgres",
              "SSLMode": "prefer"
            }
          }
        }
    ports:
      - "3434:80"
    depends_on:
      - db
    volumes:
      - ./data/pgadmin/:/var/lib/pgadmin
  
  api:
    build: ./metacatalog-api/
    volumes:
      - ./data/files:/data
      - ./metacatalog-api/metacatalog_api:/app/metacatalog_api
    links:
      - db
    depends_on:
      db:
        condition: service_healthy
    environment:
      METACATALOG_URI: postgresql://postgres:postgres@db:5432/metacatalog
      PORT: 8005
    ports:
      - 8005:8005
      - 5678:5678
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8005/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
      start_interval: 1s
    command: python -m debugpy --listen 0.0.0.0:5678 metacatalog_api/default_server.py --reload=True
  
  data-loader:
    build: .
    volumes:
      - ./in:/in
      - ./out:/out
      - ./src:/src
      - ./data/files/ismn:/data/ismn
    links:
      - api
    depends_on:
      api:
        condition: service_healthy
    environment:
      METACATALOG_URI: http://api:8005/
      TOOL_RUN: ismn_loader
    #command: ["echo",  "run the loader with an active MetaCatalog instance like: 'docker compose run --rm data-loader python run.py'"] 
    ports:
    - 8000:8000
    command: ["jupyter", "notebook", "--ip=0.0.0.0", "--port=8000", "--no-browser", "--allow-root", "--NotebookApp.token='dev'"]

  stable-ranks:
    build: .
    volumes:
      - ./workflow/loader/out:/in
      - ./workflow/rank_analysis/out:/out
      - ./src:/src
      - type: bind
        source: ./workflow/rank_analysis/in/input.json
        target: /in/input.json
        read_only: true
    # for development bind to juyper
    # ports:
    #  - 8000:8000
    # command: ["jupyter", "notebook", "--ip=0.0.0.0", "--port=8000", "--no-browser", "--allow-root"]
    # production
    environment:
      TOOL_RUN: ranks
    command: ["echo",  "run the loader with an active MetaCatalog instance like: 'docker compose run --rm ranks python run.py'"]
    